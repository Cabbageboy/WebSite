
upstream myapp {
  server 127.0.0.1:8080;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	root /var/www/glucoguide.com/public;

	# Make site accessible from http://localhost/
	server_name localhost;
	location / {
	try_files $uri  @app;
	}
	pagespeed on;
	pagespeed FileCachePath /var/ngx_pagespeed_cache;
 pagespeed EnableFilters collapse_whitespace,remove_comments;
location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { add_header "" ""; }
location ~ "^/ngx_pagespeed_static/" { }
location ~ "^/ngx_pagespeed_beacon" { }
location /ngx_pagespeed_statistics { allow 127.0.0.1; deny all; }
location /ngx_pagespeed_global_statistics { allow 127.0.0.1; deny all; }
location /ngx_pagespeed_message { allow 127.0.0.1; deny all; }
location /pagespeed_console { allow 127.0.0.1; deny all; }
	location @app {		
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# Uncomment to enable naxsi on this location
# include /etc/nginx/naxsi.rules
		proxy_pass http://myapp;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto "http";	
	}
}

server {
	listen 8000;
	listen somename:8080;
	server_name somename alias another.alias;
	root html;
	index index.html index.htm;

	location / {
		try_files $uri $uri/ =404;
	}
rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
rewrite ^/(.*)/$ /$1 permanent;

try_files $uri/index.html $uri.html $uri/ $uri =404;
}